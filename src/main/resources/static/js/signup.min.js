async function memberInsert() {
    const id = document.querySelector("#id").value;
    const pw = document.querySelector("#password").value;
    const checkpw = document.querySelector("#checkedPassword").value;

    const name = document.querySelector("#name").value;

    const emailid = document.querySelector("#emailId").value;
    const emaildomain = document.querySelector("#emailDomain").value;
    const email = `${emailid}@${emaildomain}`;

    const sido_code = document.querySelector("#sido").value;
    const gugun_code = document.querySelector("#gugun").value;
    const dataObj = { id, pw, name, email, sido_code, gugun_code };

    // 유효성 검사
    if (checkBlank(dataObj) !== null) {
        alert(`데이터를 제대로 입력해주세요.`);
        return;
    } else if (!validateRegexEmail(email)) {
        alert("올바른 이메일을 입력해주세요.");
        return;
    } else if (pw !== checkpw) {
        alert("입력하신 비밀번호와 비밀번호 확인 칸에 들어간 비밀번호가 동일하지 않습니다.");
        return;
    } else if (sido_code === "basicSelect" || gugun_code === "basicSelect") {
        alert("시/도와 구/군을 선택해주세요.");
        return;
    }

    try {
        const data ={ member: {...dataObj }};
        alert(data);
        console.log(data);
        const response = await fetch("member/memberInsert", { method: 'POST', body: JSON.stringify(data),headers: {
            "Content-Type": "application/json;charset=utf-8",
        }});
//        if (!response.ok) throw new Error(`${response.status} : 비 정상적인 접근입니다.`);

        const responseData = await response.json();
//        if (!responseData.ok) throw new Error(`${response.status} : ${responseData.error}`);

        alert(responseData.ok);
        document.querySelector("#memberInsertDiv").innerHTML = `
            ${responseData.ok}<br><button onclick="location.href='index.html'">홈으로 가기</a>
        `
    } catch (error) {
//        processError(error);
    }
}

function checkBlank(obj) {
    for (const [key, val] of Object.entries(obj)) {
        if (val.length === 0) {
            return key;
        }
    };
    return null;
}

function validateRegexEmail(email) {
    const reg = /^.+@.{2,}..{2,}$/;
    return reg.test(email);
}

function validateRegexPassword(password) {
    const reg =
        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,}/;
    return reg.test(password);
}

async function setMapInfo() {
    let sido, gugun;
    //시/도 데이터 받기
    //try {
        //시도를 다 받아온다.
        const sidoRes = await fetch("attraction/getSido", { method: 'POST', body: JSON.stringify({ sign: "getSido" })});
        //if (!sidoRes.ok) throw new Error(`${response.status} : 비 정상적인 접근입니다.`);

        const sidoResData = await sidoRes.json();
        //if (!responseData.ok) throw new Error(`${response.status} : ${responseData.error}`);
        sido = JSON.parse(sidoResData.location);

        //sido 초기값 설정
        document.querySelector("#sido").innerHTML = sido.map((curSido, idx) =>
            `<option value="${curSido.sido_code}" ${idx === 0 ? "selected" : ''}>${curSido.sido_name}</option>`).join('');
    /*
    } catch (error) {
        processError(error);
    }*/
};

document
    .querySelector("#sido")
    .addEventListener("change", async (e) => {
        const sido_code = e.target.value;
        const el = document.querySelector("#gugun");
        const htmlArr = [];
        htmlArr.push(
            `<option value="0" selected>검색 할 지역 선택</option>`
        );
		let data = sido_code;
        const response = await fetch(`attraction/getGugun`, {
            method: "POST",
            body : JSON.stringify(data)
        	,headers: {
            	"Content-Type": "application/json;charset=utf-8",
        }});
        const responseData = await response.json();
        JSON.parse(responseData.location).forEach((curLocation) => {
            const { gugun_name, gugun_code } = curLocation;
            htmlArr.push(`<option value="${gugun_code}" >${gugun_name}</option>`);
        });
        el.innerHTML = htmlArr.join("");
    });

setMapInfo();
